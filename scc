#!/bin/sh


[ -f     .scc ]  && .     .scc
[ -f   ~/.scc ]  && .   ~/.scc
[ -f /etc/scc ]  && . /etc/scc

CXXFLAGS+=" -Wall -std=gnu++0x  -ggdb3 -O0 -Wno-sign-compare"
FILE=$(find $0  -printf '%l\n')
SCC_HOME="$(dirname ${FILE:-$0})"
CXXFLAGS+=" -I $SCC_HOME "

if [ -d /usr/include/boost ];  then 
	LIBS+='-lboost_regex'
	CXXFLAGS+=" -DUSE_BOOST "
fi 

prg=/tmp/$USER-scc
src=$prg.cc
: ${1? Usage: css [options] 'c++ snippet' [arg...] }

cat <<  END	 > $src
	#include <simple.h>
	using namespace std;

	struct   F_t : vector<str> {
		str& 	operator()(size_t I) {
			while (this->size() <= I)	this->push_back(str());
			return (*this)[I];
		};
	};

	F_t F;


	void	split(string &line, char delim, vector<str> &elems) {
		stringstream	ss(line);
		string		item;
		elems.clear();
		while(std::getline(ss, item, delim)) {
			elems.push_back(item);
		}
	};



	int main(int argc, const char** argv) {
		//string __attribute__((unused))	s, line;
		//int	 __attribute__((unused))	i=0,j=0, n=0;
		//char __attribute__((unused))	c;
		char 	 __attribute__((unused))	IFS=' ';
		string	 __attribute__((unused))	OFS(" ");
END

#echo -e ' A;\n B; A\n A\n B; A\n {}A\n B({A})\n'|tee /dev/tty|   sed 's/\({[^}]*}\)\{0\}\(\(\((.*)\)\|[^;]\)\+$\)/cout << ( \2 );/'
#echo "$@" | sed 's/\(.*[;}]\)*\([^;}]\+$\)/\1 cout << ( \2 );/' >> $src

case $1 in

	-n)
		shift
		snippet="`echo \"$1\" | sed 's/\(.*[;}]\)*\([^;}]\+$\)/\1 cout << ( \2 ) << endl;/'`"
		echo "
			string line;
			while ( getline(cin,line)) {
				split(line, IFS, F);
				$snippet
			;}
		" >> $src ;;

	-p)
		shift
		snippet="`echo \"$1\" | sed 's/\(.*[;}]\)*\([^;}]\+$\)/\1 cout << ( \2 );/'`"
		echo "
			string line;
			while ( getline(cin,line)) {
				split(line, IFS, F);
				$snippet

				for(int i=0;   i < int(F.size())-1;  i++)
					cout  << F[i] << OFS;
				if (F.size() > 0)  cout << F.back();
				cout << endl;
			;}
		" >> $src ;;

	*)  
		snippet="`echo \"$1\" | sed 's/\(.*[;}]\)*\([^;}]\+$\)/\1 cout << ( \2 );/'`"
		echo   "$snippet; cout << endl;"  >> $src ;;
			

esac

echo '
} ' 		>>  $src
#cat $src

shift
${CXX-g++} $CXXFLAGS $prg.cc -o $prg $LIBS && $prg "$@"
# vim:set ts=8 sw=8 syntax=sh:   
