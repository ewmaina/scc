SCC - Simple C++ 
==========

This is simple bash scrip which allows C++ one-lines:

-------------------
scc 1   	# C++ expression - '1' evaluated and printed
scc '2<<1'
scc 'sin(0.5)'
scc 'vector<int> V{1,2,3};  for(int &x: V) x*=x;   V'  # square an array (C++0x with gcc460)
-------------------------

In SCC shall script:

* C++ snippet is decoreated with usual C++ boilerplate
* simple.h is included
* If last (or only) statement (should be an expression) is not terminated by ';' it is sent to cout.

In simple.h:

* Almost all STL is included with `using namespace std`. On my 4yr old laptop (no ssd), run time with cold cache - 2sec, with warm cache  <1sec.
* Code which allows most STL container to be printed to COUT directrly like `vector<int> V{1,2,3};   cout << V;`
* Macros for simplified CIN input

== More Examples

You can just cun-n-paste it in you bash prompt:

Sum-up df's used-disk-space column:

------------------
command df |scc 'int n, total=0;  NL;  while(F(2)>>n) total +=n; total'	# input macros: new-line - NL,  field - F()
command df |awk '{total+=$2;};  END{print total}'			# equivalent AWK
-------------------

Word frequancies:

-----------------------------------
echo aaa bbb aaa | scc 'string w;  map<string,int> M;  while(cin >> w) M[w]++;  M'
echo aaa bbb aaa | awk '{M[$1]++};  END {for (i in M) print i, M[i]}'  RS='[[:space:]]'
-----------------------------------

== What is not working:

* scc '1;  '	# Space after last col:
* {}A
* B({A})
* string literals with '(){}'


