
set -o errexit
set -v



scc 'auto P = pair<int,float>{1,3.3};  __ P, ++P, P++'
scc 'auto P = tuple<int,float>{1,3.3};  __ P, ++P, P++;'
scc 'dint v{1,2,3}, w{4,5};  v >> w'
scc 'stack<int> s; s << 1 << 2 << 3;  int x;  s >> x;  _ x, s++; __ "", ~s--;'
scc 'deque<int> c{1,2,3};      _ ++c; _ c++; _ c--; __ --c;'
scc 'auto T = MT(1,2,3);  __ ++T, T++, T;'
scc 'dint d{1,2};   3 >> d;   d'
scc 'map<int,int> m;   m<<MP(1,2);  m'

# Ct1 << Ct2
scc 'dint di; di << v9;  di'
scc 'deque<char> C;   C<<"abc"; C'

# SIZE
scc 'stack<int> sk;  sk << 1<< 2;  set<int> st;  st << 1<< 2;  __ ~vint{1,2}, ~MT(1,2), ~sk, ~st;' 
scc '__ v9, ((!!v9) ? "-- not empty" : "-- empty");   __ v0, ((!!v0) ? "-- not empty " : "-- empty");' 

# FIND
scc '__ v9 % 3,  v9 % 33;'
scc '__  v9 % vint{3,4},  v9 % vint{},  v9 % vint{3,444};'
#scc 'v9 /= 22 = 33; v9'
#scc 'v9 /= 3  = 33;  v9'
scc 'copy(v9/2, v9/5, oi)'
#scc 'copy(v9/vint{3,4}, v9/vint{8}, oi); endl'

# DIV
scc '__ v9 / 3 - +v9;'
scc '__ v9 / [](int i){return i==3;} - +v9;'
