
set -o errexit
set -v

# C1 >> C2 
scc '__ (vint{1,2} >> dint{3,4});'
scc '__ ( d23 >> d9);'
scc 'dchar s; s << "efg";  ("ABC" >> s)'

# C1 << C2
scc '__ (v23 << a23); '
scc 's="123";  __ (s << "ABC");'
scc '__ (str("left")<<"RIGHT");'
scc '__ (v23 << "abc");'
#scc '_ (v23 << a23); _ v23;  s="123";  _ (s << "ABC");  _ (str("left")<<"RIGHT");  __ (v23 << "abc");'

#  x << C >> y
scc 'int i,j;  _ (i << d9          >> j);  __ i, j;'
scc 'int i,j;  _ (i << dint{1,2,3} >> j);  __ i, j;'
scc 'int i=200; v0 << 100 << i;  __ v0, (vint() << 100 << i);'

#  x >> C << y
scc '__ ( 1 >> dint{2,3} << 4);'
scc '__ ( 1 >> d23 << 4);'
scc 'int i=1; dint dk; i >> (2 >>  dk);  __ dk, (i >> (2 >> dint()));'

# Set << x 
scc 'int i=200; set<int> st; st << 100 << i;  __ st, (set<int>() << 100 << i);'


# Set << Ct 
scc 'set<char> st;  st << "11221133"'
scc 'set<char>()       << "11221133"'

#  Pair/Tuple
scc 'auto P = pair<int,float>{1,3.3};  __ P, ++P, P++'
scc 'auto P = tuple<int,float>{1,3.3};  __ P, ++P, P++;'
scc 'auto T = MT(1,2,3);  __ ++T, T++, T;'

scc 'stack<int> s; s << 1 << 2 << 3;  int x;  s >> x;  _ x, s++; __ "", ~s--;'

scc 'deque<int> c{1,2,3};      _ ++c; _ c++; _ c--; __ --c;'
scc 'dint d{1,2};   3 >> d;   d'
#scc 'map<int,int> m;   m<<MP(1,2);  m'
scc -- '__(-- dint{0,1,2,3,4,5} -- -- );'

# SIZE
scc 'stack<int> sk;  sk << 1<< 2;  set<int> st;  st << 1<< 2;  __ ~vint{1,2}, ~MT(1,2), ~sk, ~st;' 
scc '__ v9, ((!!v9) ? "-- not empty" : "-- empty");   __ v0, ((!!v0) ? "-- not empty " : "-- empty");' 

# FIND
scc '__ v9 % 3,  v9 % 33;'
scc '__ v9 % vint{3,4},  v9 % vint{}, v9 % vint{3,444};'
scc '__ v9 % [](int i){return i==3;}, v9 % [](int i){return i==30;};'
scc '__ s9 % "bc",  s9 % "n/a"'

#scc 'v9 /= 22 = 33; v9'
#scc 'v9 /= 3  = 33; v9'
scc 'copy(v9/2, v9/5, oi)'
#scc 'copy(v9/vint{3,4}, v9/vint{8}, oi); endl'

# Ct / x,   Ct / F
scc '__ v9 / 3 - +v9;'
scc '__ v9 / [](int i){return i==3;} - +v9;'

# Ct * F
scc '__ vint{-3,3} * abs,  str("Hello") * toupper, vint{-3,0,3,-1,10} * [](int x){return abs(x);};'
scc 's="Hello";  __  *(s / islower);'
